{"version":3,"file":"xliffmerge.builder_spec.js","sourceRoot":"","sources":["../../../../../../projects/tooling/src/builders/src/xliffmergebuilder/xliffmerge.builder_spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {join, normalize, virtualFs} from '@angular-devkit/core';\r\nimport {BuildEvent, TargetSpecifier} from '@angular-devkit/architect';\r\nimport {TestProjectHost, runTargetSpec, TestLogger, DefaultTimeout} from '@angular-devkit/architect/testing';\r\nimport {tap} from 'rxjs/operators';\r\nimport {XliffmergeBuilderSchema} from './schema';\r\nimport {Observable} from 'rxjs';\r\nimport {IConfigFile} from '@ngx-i18nsupport/ngx-i18nsupport';\r\n\r\ndescribe('xliffmerge.builder', () => {\r\n\r\n    /**\r\n     * We are using a test workspace from the test folder.\r\n     * In this workspace the builder is already configured.\r\n     */\r\n    const ngxi18nsupportRoot = normalize(join(normalize(__dirname), '../../../..'));\r\n    const workspaceRoot = join(ngxi18nsupportRoot, 'src/builders/test/hello-world-app/');\r\n    const host = new TestProjectHost(workspaceRoot);\r\n    const xliffmergeTargetSpec: TargetSpecifier = {project: 'hello-world-app', target: 'xliffmerge'};\r\n\r\n    function runXliffmergeBuilderOnTestWorkspace(configuration: XliffmergeBuilderSchema|undefined,\r\n                                                 logger: TestLogger): Observable<BuildEvent> {\r\n        return runTargetSpec(host, xliffmergeTargetSpec, configuration, DefaultTimeout, logger);\r\n    }\r\n\r\n    beforeEach(done => {\r\n        host.initialize().toPromise().then(done, done.fail);\r\n    });\r\n\r\n    afterEach(done => {\r\n        host.restore().toPromise().then(done, done.fail);\r\n    });\r\n\r\n    it('should show error when called with illegal profile', (done) => {\r\n        const logger = new TestLogger('logger');\r\n        const profileName = 'nonexistentfile';\r\n        runXliffmergeBuilderOnTestWorkspace({profile: profileName}, logger).pipe(\r\n            tap((buildEvent) => {\r\n                expect(buildEvent.success).toBe(false);\r\n                const msg = 'could not read profile';\r\n                expect(logger.includes(msg)).toBe(true, `msg \"${msg}\" not found in log`);\r\n                expect(logger.includes(profileName)).toBe(true, `filename \"${profileName}\" not found in log`);\r\n            })\r\n        ).toPromise().then(done, done.fail);\r\n    });\r\n\r\n    it('should show error when called with illegal configuration', (done) => {\r\n        const logger = new TestLogger('logger');\r\n        const xlfFileName = 'nonexistentxlffile';\r\n        runXliffmergeBuilderOnTestWorkspace({xliffmergeOptions: {i18nFile: xlfFileName}}, logger).pipe(\r\n            tap((buildEvent) => {\r\n                expect(buildEvent.success).toBe(false);\r\n                const msg = 'is not readable';\r\n                expect(logger.includes(msg)).toBe(true, `msg \"${msg}\" not found in log`);\r\n                expect(logger.includes(xlfFileName)).toBe(true, `filename \"${xlfFileName}\" not found in log`);\r\n            })\r\n        ).toPromise().then(done, done.fail);\r\n    });\r\n\r\n    it('should use profile when called with both profile and configuration', (done) => {\r\n        const logger = new TestLogger('logger');\r\n        const profileName = 'nonexistentfile';\r\n        const xlfFileName = 'nonexistentxlffile';\r\n        runXliffmergeBuilderOnTestWorkspace({profile: profileName, xliffmergeOptions: {i18nFile: xlfFileName}}, logger).pipe(\r\n            tap((buildEvent) => {\r\n                expect(buildEvent.success).toBe(false);\r\n                const msg = 'could not read profile';\r\n                expect(logger.includes(msg)).toBe(true, `msg \"${msg}\" not found in log`);\r\n                expect(logger.includes(profileName)).toBe(true, `filename \"${profileName}\" not found in log`);\r\n            })\r\n        ).toPromise().then(done, done.fail);\r\n    });\r\n\r\n    it('should run successfully with given xliffmergeOptions', (done) => {\r\n        const logger = new TestLogger('logger');\r\n        const configuration: IConfigFile = {\r\n            xliffmergeOptions: {\r\n                'srcDir': 'src/i18n',\r\n                'genDir': 'src/i18nout',\r\n                languages: ['en', 'de']\r\n            }\r\n        };\r\n        const generatedFileEN = join(normalize('src'),  'i18nout', 'messages.en.xlf');\r\n        const generatedFileDE = join(normalize('src'),  'i18nout', 'messages.de.xlf');\r\n        runXliffmergeBuilderOnTestWorkspace(configuration, logger).pipe(\r\n            tap((buildEvent) => expect(buildEvent.success).toBe(true)),\r\n            tap(() => {\r\n                const msg = 'WARNING: please translate file';\r\n                expect(logger.includes(msg)).toBe(true, `msg \"${msg}\" not found in log`);\r\n                expect(host.scopedSync().exists(generatedFileEN)).toBe(true, `file ${generatedFileEN} not generated`);\r\n                expect(host.scopedSync().exists(generatedFileDE)).toBe(true, `file ${generatedFileDE} not generated`);\r\n            })\r\n        ).toPromise().then(done, done.fail);\r\n    });\r\n\r\n    it('should run successfully with options from profile', (done) => {\r\n        const logger = new TestLogger('logger');\r\n        const profileContent: IConfigFile = {\r\n            xliffmergeOptions: {\r\n                'srcDir': 'src/i18n',\r\n                'genDir': 'src/i18nout',\r\n                languages: ['en', 'de']\r\n            }\r\n        };\r\n        host.scopedSync().write(\r\n            join(normalize('.'), 'xliffmergeconfig.json'),\r\n            virtualFs.stringToFileBuffer(JSON.stringify(profileContent)));\r\n        const configuration: XliffmergeBuilderSchema = {\r\n            profile: 'xliffmergeconfig.json'\r\n        };\r\n        const generatedFileEN = join(normalize('src'),  'i18nout', 'messages.en.xlf');\r\n        const generatedFileDE = join(normalize('src'),  'i18nout', 'messages.de.xlf');\r\n        runXliffmergeBuilderOnTestWorkspace(configuration, logger).pipe(\r\n            tap((buildEvent) => expect(buildEvent.success).toBe(true)),\r\n            tap(() => {\r\n                const msg = 'WARNING: please translate file';\r\n                expect(logger.includes(msg)).toBe(true, `msg \"${msg}\" not found in log`);\r\n                expect(host.scopedSync().exists(generatedFileEN)).toBe(true, `file ${generatedFileEN} not generated`);\r\n                expect(host.scopedSync().exists(generatedFileDE)).toBe(true, `file ${generatedFileDE} not generated`);\r\n            })\r\n        ).toPromise().then(done, done.fail);\r\n    });\r\n});\r\n"]}