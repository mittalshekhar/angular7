/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ParsedMessagePart, ParsedMessagePartType } from './parsed-message-part';
/**
 * Created by martin on 14.06.2017.
 * A message part consisting of an empty tag like <br/>.
 */
var /**
 * Created by martin on 14.06.2017.
 * A message part consisting of an empty tag like <br/>.
 */
ParsedMessagePartEmptyTag = /** @class */ (function (_super) {
    tslib_1.__extends(ParsedMessagePartEmptyTag, _super);
    function ParsedMessagePartEmptyTag(tagname, idcounter) {
        var _this = _super.call(this, ParsedMessagePartType.EMPTY_TAG) || this;
        _this._tagname = tagname;
        _this._idcounter = idcounter;
        return _this;
    }
    /**
     * @param {?=} format
     * @return {?}
     */
    ParsedMessagePartEmptyTag.prototype.asDisplayString = /**
     * @param {?=} format
     * @return {?}
     */
    function (format) {
        if (this._idcounter === 0) {
            return '<' + this._tagname + '>';
        }
        else {
            return '<' + this._tagname + ' id="' + this._idcounter.toString() + '">';
        }
    };
    /**
     * @return {?}
     */
    ParsedMessagePartEmptyTag.prototype.tagName = /**
     * @return {?}
     */
    function () {
        return this._tagname;
    };
    /**
     * @return {?}
     */
    ParsedMessagePartEmptyTag.prototype.idCounter = /**
     * @return {?}
     */
    function () {
        return this._idcounter;
    };
    return ParsedMessagePartEmptyTag;
}(ParsedMessagePart));
/**
 * Created by martin on 14.06.2017.
 * A message part consisting of an empty tag like <br/>.
 */
export { ParsedMessagePartEmptyTag };
if (false) {
    /** @type {?} */
    ParsedMessagePartEmptyTag.prototype._tagname;
    /** @type {?} */
    ParsedMessagePartEmptyTag.prototype._idcounter;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC1lbXB0eS10YWcuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWkxOG5zdXBwb3J0L25neC1pMThuc3VwcG9ydC1saWIvIiwic291cmNlcyI6WyJpbXBsL3BhcnNlZC1tZXNzYWdlLXBhcnQtZW1wdHktdGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLGlCQUFpQixFQUFFLHFCQUFxQixFQUFDLE1BQU0sdUJBQXVCLENBQUM7Ozs7O0FBTS9FOzs7O0FBQUE7SUFBK0MscURBQWlCO0lBSzVELG1DQUFZLE9BQWUsRUFBRSxTQUFpQjtRQUE5QyxZQUNJLGtCQUFNLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxTQUd6QztRQUZHLEtBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLEtBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDOztLQUMvQjs7Ozs7SUFFTSxtREFBZTs7OztjQUFDLE1BQWU7UUFDbEMsSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLENBQUMsRUFBRTtZQUN2QixPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztTQUNwQzthQUFNO1lBQ0gsT0FBTyxHQUFHLEdBQUcsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUM7U0FDNUU7Ozs7O0lBR0UsMkNBQU87Ozs7UUFDVixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7Ozs7O0lBR2xCLDZDQUFTOzs7O1FBQ1osT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDOztvQ0E5Qi9CO0VBTStDLGlCQUFpQixFQTBCL0QsQ0FBQTs7Ozs7QUExQkQscUNBMEJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtQYXJzZWRNZXNzYWdlUGFydCwgUGFyc2VkTWVzc2FnZVBhcnRUeXBlfSBmcm9tICcuL3BhcnNlZC1tZXNzYWdlLXBhcnQnO1xyXG4vKipcclxuICogQ3JlYXRlZCBieSBtYXJ0aW4gb24gMTQuMDYuMjAxNy5cclxuICogQSBtZXNzYWdlIHBhcnQgY29uc2lzdGluZyBvZiBhbiBlbXB0eSB0YWcgbGlrZSA8YnIvPi5cclxuICovXHJcblxyXG5leHBvcnQgY2xhc3MgUGFyc2VkTWVzc2FnZVBhcnRFbXB0eVRhZyBleHRlbmRzIFBhcnNlZE1lc3NhZ2VQYXJ0IHtcclxuXHJcbiAgICBwcml2YXRlIF90YWduYW1lOiBzdHJpbmc7XHJcbiAgICBwcml2YXRlIF9pZGNvdW50ZXI6IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih0YWduYW1lOiBzdHJpbmcsIGlkY291bnRlcjogbnVtYmVyKSB7XHJcbiAgICAgICAgc3VwZXIoUGFyc2VkTWVzc2FnZVBhcnRUeXBlLkVNUFRZX1RBRyk7XHJcbiAgICAgICAgdGhpcy5fdGFnbmFtZSA9IHRhZ25hbWU7XHJcbiAgICAgICAgdGhpcy5faWRjb3VudGVyID0gaWRjb3VudGVyO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc0Rpc3BsYXlTdHJpbmcoZm9ybWF0Pzogc3RyaW5nKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2lkY291bnRlciA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gJzwnICsgdGhpcy5fdGFnbmFtZSArICc+JztcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gJzwnICsgdGhpcy5fdGFnbmFtZSArICcgaWQ9XCInICsgdGhpcy5faWRjb3VudGVyLnRvU3RyaW5nKCkgKyAnXCI+JztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHRhZ05hbWUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdGFnbmFtZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgaWRDb3VudGVyKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lkY291bnRlcjtcclxuICAgIH1cclxufVxyXG4iXX0=