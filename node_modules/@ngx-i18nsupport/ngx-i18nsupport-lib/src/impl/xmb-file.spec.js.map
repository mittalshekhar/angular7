{"version":3,"file":"xmb-file.spec.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xmb-file.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {TranslationMessagesFileFactory, ITranslationMessagesFile, ITransUnit, INormalizedMessage,\r\n    STATE_NEW, STATE_FINAL, FILETYPE_XTB} from '../api';\r\nimport * as fs from 'fs';\r\n\r\n/**\r\n * Created by martin on 28.04.2017.\r\n * Testcases for xmb files.\r\n */\r\n\r\ndescribe('ngx-i18nsupport-lib xmb test spec', () => {\r\n\r\n    const SRCDIR = 'test/testdata/i18n/';\r\n\r\n    const ENCODING = 'UTF-8';\r\n\r\n    /**\r\n     * Helper function to read Xmb from File\r\n     */\r\n    function readFile(path: string): ITranslationMessagesFile {\r\n        const content = fs.readFileSync(path, ENCODING);\r\n        return TranslationMessagesFileFactory.fromFileContent('xmb', content, path, ENCODING);\r\n    }\r\n\r\n    describe('xmb format tests', () => {\r\n        const MASTER1SRC = SRCDIR + 'ngExtractedMaster1.xmb';\r\n        const MASTER_DE_XMB = SRCDIR + 'ngExtractedMaster1.de.xmb';\r\n\r\n        const ID_MY_FIRST = '2047558209369508311'; // an ID from ngExtractedMaster1.xmb\r\n        const ID_WITH_PLACEHOLDER = '9030312858648510700';\r\n        const ID_WITH_MEANING_AND_DESCRIPTION = '3274258156935474372'; // ID with placeholders and source element\r\n        const ID_WITH_NO_SOURCEREFS = 'no_sourceref_test'; // an ID with no source elements\r\n        const ID_WITH_TWO_SOURCEREFS = '4371668001355139802'; // an ID with 2 source elements\r\n        const ID_WITH_LINEBREAK = '7149517499881679376';\r\n        const ID_WITH_TAGS = '7609655310648429098';\r\n        const ID_WITH_TAG_STRANGE = '7610784844464920497';\r\n        const ID_TO_MERGE = 'unittomerge';\r\n        const ID_ICU_PLURAL = '157616252019374389';\r\n        const ID_ICU_SELECT = '4002068837191765530';\r\n        const ID_ICU_EMBEDDED_TAGS = '6710804210857077393';\r\n        const ID_CONTAINS_ICU = '2747218257718409559';\r\n        const ID_CONTAINS_TWO_ICU = 'complextags.icuTwoICU';\r\n\r\n        it('should read xmb file', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file).toBeTruthy();\r\n            expect(file.fileType()).toBe('XMB');\r\n            const tu: ITransUnit = file.transUnitWithId(ID_MY_FIRST);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceContent()).toBe('Meine erste I18N-Anwendung');\r\n        });\r\n\r\n        it('should emit warnings', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file.warnings().length).toBe(1);\r\n            expect(file.warnings()[0]).toContain('msg without \"id\"');\r\n        });\r\n\r\n        it('should count units', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file.numberOfTransUnits()).toBe(21);\r\n            expect(file.numberOfTransUnitsWithMissingId()).toBe(1);\r\n            expect(file.numberOfUntranslatedTransUnits()).toBe(file.numberOfTransUnits());\r\n            expect(file.numberOfReviewedTransUnits()).toBe(0);\r\n        });\r\n\r\n        it('should return source language (by guessing from file name)', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file.sourceLanguage()).toBeFalsy();\r\n            const file2: ITranslationMessagesFile = readFile(MASTER_DE_XMB);\r\n            expect(file2.sourceLanguage()).toBe('de');\r\n        });\r\n\r\n        it('should return target language null', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file.targetLanguage()).toBeFalsy();\r\n        });\r\n\r\n        it('should loop over all trans units', () => {\r\n            const translatedFile: ITranslationMessagesFile = readFile(MASTER_DE_XMB);\r\n            let count = 0;\r\n            translatedFile.forEachTransUnit((tu: ITransUnit) => {\r\n                expect(tu).toBeTruthy();\r\n                count++;\r\n            });\r\n            expect(count).toBeGreaterThan(4);\r\n        });\r\n\r\n        it('should ignore change source content', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER_DE_XMB);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceContent()).toBeTruthy();\r\n            const oldValue = tu.sourceContent();\r\n            expect(tu.supportsSetSourceContent()).toBeFalsy();\r\n            const changedMessage = 'a changed source';\r\n            tu.setSourceContent(changedMessage);\r\n            expect(tu.sourceContent()).toBe(oldValue);\r\n        });\r\n\r\n        it('should read meaning and description of tu', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.meaning()).toBe('dateservice.monday');\r\n            expect(tu.description()).toBe('ngx-translate');\r\n        });\r\n\r\n        it('should ignore change description', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.description()).toBeTruthy();\r\n            const oldValue = tu.description();\r\n            expect(tu.supportsSetDescriptionAndMeaning()).toBeFalsy();\r\n            const changedMessage = 'a changed description';\r\n            tu.setDescription(changedMessage);\r\n            expect(tu.description()).toBe(oldValue);\r\n        });\r\n\r\n        it('should ignore change meaning', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.meaning()).toBeTruthy();\r\n            const oldValue = tu.meaning();\r\n            expect(tu.supportsSetDescriptionAndMeaning()).toBeFalsy();\r\n            const changedMessage = 'a changed description';\r\n            tu.setMeaning(changedMessage);\r\n            expect(tu.meaning()).toBe(oldValue);\r\n        });\r\n\r\n        it('should not have notes and should not allow to change them', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.notes()).toEqual([]);\r\n            expect(tu.supportsSetNotes()).toBeFalsy();\r\n            tu.setNotes([{from: 'testcase', text: 'a note that should not be stored'}]);\r\n            expect(tu.notes()).toEqual([]);\r\n        });\r\n\r\n        it('should ignore source attribute in sourceContent', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceContent())\r\n                .toBe('Eintrag <ph name=\"INTERPOLATION\"><ex>INTERPOLATION</ex></ph>' +\r\n                    ' von <ph name=\"INTERPOLATION_1\"><ex>INTERPOLATION_1</ex></ph> hinzugefügt.');\r\n        });\r\n\r\n        it('should return empty source references array if source not set', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_NO_SOURCEREFS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(0);\r\n        });\r\n\r\n        it('should return source reference', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(1);\r\n            expect(tu.sourceReferences()[0].sourcefile).toBe('S:/experimente/sampleapp41/src/app/app.component.ts');\r\n            expect(tu.sourceReferences()[0].linenumber).toBe(6);\r\n        });\r\n\r\n        it('should return more than one source references', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(2);\r\n            expect(tu.sourceReferences()[0].sourcefile).toBe('S:/experimente/sampleapp41/src/app/app.component.ts');\r\n            expect(tu.sourceReferences()[0].linenumber).toBe(2);\r\n            expect(tu.sourceReferences()[1].sourcefile).toBe('S:/experimente/sampleapp41/src/app/app.component.ts');\r\n            expect(tu.sourceReferences()[1].linenumber).toBe(3);\r\n        });\r\n\r\n        it('should return source reference with more than 1 linenumber', () => {\r\n            // if the text in template spreads over more than 1 line, there is a linenumber format like 7,8 used\r\n            // in this case, linenumber is the first line (here 7).\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_LINEBREAK);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(1);\r\n            expect(tu.sourceReferences()[0].sourcefile).toBe('S:/experimente/sampleapp41/src/app/app.component.ts');\r\n            expect(tu.sourceReferences()[0].linenumber).toBe(7);\r\n        });\r\n\r\n        it('should set source references', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(0);\r\n            tu.setSourceReferences([{sourcefile: 'x', linenumber: 10}, {sourcefile: 'y', linenumber: 20}]);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu2.sourceReferences().length).toBe(2);\r\n            expect(tu2.sourceReferences()[0].sourcefile).toBe('x');\r\n            expect(tu2.sourceReferences()[0].linenumber).toBe(10);\r\n            expect(tu2.sourceReferences()[1].sourcefile).toBe('y');\r\n            expect(tu2.sourceReferences()[1].linenumber).toBe(20);\r\n        });\r\n\r\n        it('should override source references', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.supportsSetSourceReferences()).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(2);\r\n            tu.setSourceReferences([{sourcefile: 'x:komisch', linenumber: 10}]);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu2.sourceReferences().length).toBe(1);\r\n            expect(tu2.sourceReferences()[0].sourcefile).toBe('x:komisch');\r\n            expect(tu2.sourceReferences()[0].linenumber).toBe(10);\r\n        });\r\n\r\n        it('should normalize placeholders to {{0}} etc', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu.targetContentNormalized().asDisplayString()).toBe('Eintrag {{0}} von {{1}} hinzugefügt.');\r\n        });\r\n\r\n        it('should normalize embedded html tags', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_TAGS);\r\n            expect(tu.targetContentNormalized().asDisplayString()).toBe('Diese Nachricht ist <b><strong>SEHR WICHTIG</strong></b>');\r\n        });\r\n\r\n        it('should normalize embedded html tags', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_TAG_STRANGE);\r\n            expect(tu.targetContentNormalized().asDisplayString()).toBe('Diese Nachricht ist <strange>{{0}}</strange>');\r\n        });\r\n\r\n        it('should remove a transunit by id', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu).toBeTruthy();\r\n            file.removeTransUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu2).toBeFalsy(); // should not exist any more\r\n        });\r\n\r\n        it ('should copy a transunit from file a to file b', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            const targetFile: ITranslationMessagesFile = file.createTranslationFileForLang('de', null, false, true);\r\n            expect(targetFile.fileType()).toBe(FILETYPE_XTB);\r\n            targetFile.removeTransUnitWithId(ID_TO_MERGE);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeFalsy();\r\n            const newTu = targetFile.importNewTransUnit(tu, false, true);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeTruthy();\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toEqual(newTu);\r\n            const changedTargetFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(targetFile.editedContent(), null, null);\r\n            const targetTu = changedTargetFile.transUnitWithId(ID_TO_MERGE);\r\n            expect(targetTu.targetContent()).toBe('Test for merging units');\r\n        });\r\n\r\n        it ('should copy source to target and set a praefix and suffix', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            file.setNewTransUnitTargetPraefix('%%');\r\n            file.setNewTransUnitTargetSuffix('!!');\r\n            const isDefaultLang = false;\r\n            const copyContent = true;\r\n            const file2: ITranslationMessagesFile = file.createTranslationFileForLang('xy', null, isDefaultLang, copyContent);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu2.targetState()).toBe(STATE_FINAL); // FINAL because source is different than target\r\n            expect(tu2.targetContent()).toBe('%%Test for merging units!!');\r\n        });\r\n\r\n        it ('should copy source to target, but should not set a praefix and suffix for ICU messages', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            file.setNewTransUnitTargetPraefix('%%');\r\n            file.setNewTransUnitTargetSuffix('!!');\r\n            const isDefaultLang = false;\r\n            const copyContent = true;\r\n            const file2: ITranslationMessagesFile = file.createTranslationFileForLang('xy', null, isDefaultLang, copyContent);\r\n            const tuICU: ITransUnit = file2.transUnitWithId(ID_ICU_PLURAL);\r\n            expect(tuICU.targetState()).toBe(STATE_NEW);\r\n            expect(tuICU.targetContent()).not.toContain('%%');\r\n            expect(tuICU.targetContent()).not.toContain('!!');\r\n        });\r\n\r\n        it ('should preserve line end at end of file while editing', () => {\r\n            const content = fs.readFileSync(MASTER1SRC, ENCODING);\r\n            expect(content.endsWith('\\n')).toBeTruthy('Master should end with EOL');\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            const targetFile: ITranslationMessagesFile = file.createTranslationFileForLang('de', null, false, true);\r\n            targetFile.removeTransUnitWithId(ID_TO_MERGE);\r\n            targetFile.importNewTransUnit(tu, false, true);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeTruthy();\r\n            expect(targetFile.editedContent().endsWith('\\n')).toBeTruthy('Edited content should end with EOL');\r\n        });\r\n\r\n        it ('should not be translatable at all', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_MY_FIRST);\r\n            expect(tu).toBeTruthy();\r\n            const translationString = 'Anwendung läuft';\r\n            // try to translate\r\n            try {\r\n                const translation: INormalizedMessage = tu.sourceContentNormalized().translate(translationString);\r\n                tu.translate(translation);\r\n                fail('expected error not thrown');\r\n            } catch (error) {\r\n                expect(error.toString()).toContain('cannot translate xmb files');\r\n            }\r\n        });\r\n\r\n        it('should contain ICU reference in sourceContentNormalized', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_CONTAINS_ICU);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceContent())\r\n                .toBe('Zum Wert <ph name=\"INTERPOLATION\"><ex>INTERPOLATION</ex></ph> gehört der Text <ph name=\"ICU\"><ex>ICU</ex></ph>');\r\n            expect(tu.sourceContentNormalized().asDisplayString()).toBe('Zum Wert {{0}} gehört der Text <ICU-Message-Ref_0/>');\r\n        });\r\n\r\n        it('should contain 2 ICU references in sourceContentNormalized', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_CONTAINS_TWO_ICU);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceContent()).toBe('first: <ph name=\"ICU\"><ex>ICU</ex></ph>, second <ph name=\"ICU_1\"><ex>ICU_1</ex></ph>');\r\n            expect(tu.sourceContentNormalized().asDisplayString()).toBe('first: <ICU-Message-Ref_0/>, second <ICU-Message-Ref_1/>');\r\n        });\r\n\r\n        it('should handle plural ICU', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_ICU_PLURAL);\r\n            expect(tu).toBeTruthy();\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('<ICU-Message/>');\r\n            const icuMessage = normalizedMessage.getICUMessage();\r\n            expect(icuMessage).toBeTruthy();\r\n            expect(icuMessage.isPluralMessage()).toBeTruthy();\r\n            expect(icuMessage.isSelectMessage()).toBeFalsy();\r\n            expect(icuMessage.getCategories().length).toBe(3);\r\n            expect(icuMessage.getCategories()[0].getCategory()).toBe('=0');\r\n            expect(icuMessage.getCategories()[0].getMessageNormalized().asDisplayString()).toBe('kein Schaf');\r\n            expect(icuMessage.getCategories()[1].getCategory()).toBe('=1');\r\n            expect(icuMessage.getCategories()[1].getMessageNormalized().asDisplayString()).toBe('1 Schaf');\r\n            expect(icuMessage.getCategories()[2].getCategory()).toBe('other');\r\n            expect(icuMessage.getCategories()[2].getMessageNormalized().asDisplayString()).toBe('x Schafe');\r\n        });\r\n\r\n        it('should handle select ICU message', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_ICU_SELECT);\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('<ICU-Message/>');\r\n            const icuMessage = normalizedMessage.getICUMessage();\r\n            expect(icuMessage).toBeTruthy();\r\n            expect(icuMessage.isPluralMessage()).toBeFalsy();\r\n            expect(icuMessage.isSelectMessage()).toBeTruthy();\r\n            expect(icuMessage.getCategories().length).toBe(3);\r\n            expect(icuMessage.getCategories()[0].getCategory()).toBe('wert0');\r\n            expect(icuMessage.getCategories()[0].getMessageNormalized().asDisplayString()).toBe('wert0 wurde gewählt');\r\n            expect(icuMessage.getCategories()[1].getCategory()).toBe('wert1');\r\n            expect(icuMessage.getCategories()[1].getMessageNormalized().asDisplayString()).toBe('ein anderer Wert (wert1) wurde gewählt');\r\n            expect(icuMessage.getCategories()[2].getCategory()).toBe('wert2');\r\n            expect(icuMessage.getCategories()[2].getMessageNormalized().asDisplayString()).toBe('was ganz anderes wurde gewählt');\r\n        });\r\n\r\n        it('should handle ICU with embedded tags', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_ICU_EMBEDDED_TAGS);\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('<ICU-Message/>');\r\n            const icuMessage = normalizedMessage.getICUMessage();\r\n            expect(icuMessage).toBeTruthy();\r\n            expect(icuMessage.isPluralMessage()).toBeFalsy();\r\n            expect(icuMessage.isSelectMessage()).toBeTruthy();\r\n            expect(icuMessage.getCategories().length).toBe(3);\r\n            expect(icuMessage.getCategories()[0].getCategory()).toBe('wert0');\r\n            expect(icuMessage.getCategories()[0].getMessageNormalized().asDisplayString()).toBe('wert0 ausgewählt');\r\n            expect(icuMessage.getCategories()[1].getCategory()).toBe('wert1');\r\n            expect(icuMessage.getCategories()[1].getMessageNormalized().asDisplayString())\r\n                .toBe('ein <b>anderer</b> Wert (wert1) ausgewählt');\r\n            expect(icuMessage.getCategories()[2].getCategory()).toBe('wert2');\r\n            expect(icuMessage.getCategories()[2].getMessageNormalized().asDisplayString())\r\n                .toBe('was <em>ganz anderes</em> wurde ausgewählt');\r\n        });\r\n\r\n    });\r\n});\r\n"]}