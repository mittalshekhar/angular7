{"version":3,"file":"xliff2-file.spec.js","sourceRoot":"","sources":["../../../../projects/ngx-i18nsupport-lib/src/impl/xliff2-file.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    TranslationMessagesFileFactory, ITranslationMessagesFile,\r\n    ITransUnit, INormalizedMessage, STATE_NEW, STATE_TRANSLATED, STATE_FINAL, INote\r\n} from '../api/index';\r\nimport * as fs from 'fs';\r\nimport {AbstractTransUnit} from './abstract-trans-unit';\r\nimport {DOMUtilities} from './dom-utilities';\r\nimport {DOMParser} from 'xmldom';\r\n\r\n/**\r\n * Created by martin on 05.05.2017.\r\n * Testcases for XLIFF 2.0 files.\r\n */\r\n\r\ndescribe('ngx-i18nsupport-lib XLIFF 2.0 test spec', () => {\r\n\r\n    const SRCDIR = 'test/testdata/i18n/';\r\n\r\n    const ENCODING = 'UTF-8';\r\n\r\n    /**\r\n     * Helper function to read Xliff 2.0 from File\r\n     */\r\n    function readFile(path: string): ITranslationMessagesFile {\r\n        const content = fs.readFileSync(path, ENCODING);\r\n        return TranslationMessagesFileFactory.fromFileContent('xlf2', content, path, ENCODING);\r\n    }\r\n\r\n    describe('XLIFF 2.0 format tests', () => {\r\n        const MASTER1SRC = SRCDIR + 'ngExtractedMaster1.xlf2';\r\n        const TRANSLATED_FILE_SRC = SRCDIR + 'translatedFile.xlf2';\r\n\r\n        const ID_APP_RUNS = '4371668001355139802'; // an ID from ngExtractedMaster1.xlf\r\n        const ID_WITH_PLACEHOLDER = '9030312858648510700';\r\n        const ID_WITH_REPEATED_PLACEHOLDER = '7049669989298349710';\r\n        const ID_WITH_MEANING_AND_DESCRIPTION = '6830980354990918030';\r\n        const ID_WITH_NOTES = 'notefromreviewer';\r\n        const ID_WITH_NO_SOURCEREFS = '4371668001355139802'; // an ID with no source elements\r\n        const ID_WITH_ONE_SOURCEREF = '7499557905529977371';\r\n        const ID_WITH_TWO_SOURCEREFS = '3274258156935474372'; // an ID with 2 source elements\r\n        const ID_WITH_TAGS = '7609655310648429098';\r\n        const ID_WITH_STRANGE_TAG = '7610784844464920497';\r\n        const ID_TO_MERGE = 'unittomerge';\r\n        const ID_ICU_PLURAL = '157616252019374389';\r\n        const ID_ICU_SELECT = '6710804210857077394';\r\n        const ID_ICU_EMBEDDED_TAGS = '6710804210857077393';\r\n        const ID_CONTAINS_ICU = '2747218257718409559';\r\n        const ID_CONTAINS_TWO_ICU = 'complextags.icuTwoICU';\r\n        const ID_CONTAINS_TWO_ICU_WITH_EQUIV = 'complextags.icuTwoICU.withEquiv'; // angular issue #17344\r\n        const ID_WITH_BR_TAG = '3944017551463298929';\r\n        const ID_WITH_IMG_TAG = '705837031073461246';\r\n\r\n        it('should read xlf file', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file).toBeTruthy();\r\n            expect(file.fileType()).toBe('XLIFF 2.0');\r\n            const tu: ITransUnit = file.transUnitWithId(ID_APP_RUNS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceContent()).toBe('Anwendung läuft!');\r\n        });\r\n\r\n        it('should read xlf2 file and pretty print it and read it in again', () => {\r\n            const file: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            expect(file).toBeTruthy();\r\n            const formattedXml = file.editedContent(true);\r\n            const rereadFile: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(formattedXml, null, null);\r\n            expect(rereadFile.numberOfTransUnits()).toBe(file.numberOfTransUnits());\r\n        });\r\n\r\n        it('should not add empty lines when beautifying (issue ngx-i18nsupport #97)', () => {\r\n            const file: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            expect(file).toBeTruthy();\r\n            const editedContentBeautified = file.editedContent(true);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(editedContentBeautified, null, null);\r\n            const editedContentBeautifiedAgain = file2.editedContent(true);\r\n            expect(editedContentBeautifiedAgain).toMatch(/<source>Diese Nachricht ist <pc/);\r\n            expect(editedContentBeautifiedAgain).not.toMatch(/<source>Diese Nachricht ist\\s*\\r\\n?/);\r\n        });\r\n\r\n        it('should emit warnings', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file.warnings().length).toBe(1);\r\n            expect(file.warnings()[0]).toContain('trans-unit without \"id\"');\r\n        });\r\n\r\n        it('should count units', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file.numberOfTransUnits()).toBe(40);\r\n            expect(file.numberOfTransUnitsWithMissingId()).toBe(1);\r\n            expect(file.numberOfUntranslatedTransUnits()).toBe(file.numberOfTransUnits());\r\n            expect(file.numberOfReviewedTransUnits()).toBe(0);\r\n        });\r\n\r\n        it('should return source language', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file.sourceLanguage()).toBe('de');\r\n        });\r\n\r\n        it('should change source language', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file.sourceLanguage()).toBe('de');\r\n            file.setSourceLanguage('en');\r\n            expect(file.sourceLanguage()).toBe('en');\r\n        });\r\n\r\n        it('should return target language', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            expect(file.targetLanguage()).toBeFalsy();\r\n            const translatedFile: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            expect(translatedFile.targetLanguage()).toBe('en');\r\n        });\r\n\r\n        it('should change target language', () => {\r\n            const file: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            expect(file.targetLanguage()).toBe('en');\r\n            file.setTargetLanguage('suahel');\r\n            expect(file.targetLanguage()).toBe('suahel');\r\n        });\r\n\r\n        it('should loop over all trans units', () => {\r\n            const translatedFile: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            let count = 0;\r\n            translatedFile.forEachTransUnit((tu: ITransUnit) => {\r\n                expect(tu).toBeTruthy();\r\n                count++;\r\n            });\r\n            expect(count).toBeGreaterThan(24);\r\n        });\r\n\r\n        it('should change source content', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_BR_TAG);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.supportsSetSourceContent()).toBeTruthy();\r\n            const changedMessage = tu.sourceContent() + 'a changed source content';\r\n            tu.setSourceContent(changedMessage);\r\n            expect(tu.sourceContent()).toBe(changedMessage);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_BR_TAG);\r\n            expect(tu2.sourceContent()).toBe(changedMessage);\r\n        });\r\n\r\n        it('should read meaning and description of tu', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.meaning()).toBe('dateservice.monday');\r\n            expect(tu.description()).toBe('ngx-translate');\r\n        });\r\n\r\n        it('should change description', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.description()).toBeTruthy();\r\n            expect(tu.supportsSetDescriptionAndMeaning()).toBeTruthy();\r\n            const changedMessage = 'a changed description';\r\n            tu.setDescription(changedMessage);\r\n            expect(tu.description()).toBe(changedMessage);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu2.description()).toBe(changedMessage);\r\n        });\r\n\r\n        it('should set description (creates new description)', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_BR_TAG); // anyone without description\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.description()).toBeFalsy();\r\n            expect(tu.supportsSetDescriptionAndMeaning()).toBeTruthy();\r\n            const changedMessage = 'a changed description';\r\n            tu.setDescription(changedMessage);\r\n            expect(tu.description()).toBe(changedMessage);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_BR_TAG);\r\n            expect(tu2.description()).toBe(changedMessage);\r\n            const xmlElem = (<AbstractTransUnit> tu2).asXmlElement();\r\n            const notesElem = DOMUtilities.getFirstElementByTagName(xmlElem, 'notes');\r\n            expect(notesElem).toBeTruthy();\r\n        });\r\n\r\n        it('should remove description', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.description()).toBeTruthy();\r\n            expect(tu.supportsSetDescriptionAndMeaning()).toBeTruthy();\r\n            tu.setDescription(null);\r\n            expect(tu.description()).toBeFalsy();\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu2.description()).toBeFalsy();\r\n        });\r\n\r\n        it('should change meaning', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.meaning()).toBeTruthy();\r\n            expect(tu.supportsSetDescriptionAndMeaning()).toBeTruthy();\r\n            const changedMessage = 'a changed description';\r\n            tu.setMeaning(changedMessage);\r\n            expect(tu.meaning()).toBe(changedMessage);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu2.meaning()).toBe(changedMessage);\r\n        });\r\n\r\n        it('should set meaning (creates new meaning)', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_BR_TAG); // anyone without description\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.meaning()).toBeFalsy();\r\n            expect(tu.supportsSetDescriptionAndMeaning()).toBeTruthy();\r\n            const changedMessage = 'a changed description';\r\n            tu.setMeaning(changedMessage);\r\n            expect(tu.meaning()).toBe(changedMessage);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_BR_TAG);\r\n            expect(tu2.meaning()).toBe(changedMessage);\r\n        });\r\n\r\n        it('should remove meaning', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.meaning()).toBeTruthy();\r\n            expect(tu.supportsSetDescriptionAndMeaning()).toBeTruthy();\r\n            tu.setMeaning(null);\r\n            expect(tu.meaning()).toBeFalsy();\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_MEANING_AND_DESCRIPTION);\r\n            expect(tu2.meaning()).toBeFalsy();\r\n        });\r\n\r\n        it('should read additional notes, issue #56', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_NOTES);\r\n            expect(tu).toBeTruthy();\r\n            const notes: INote[] = tu.notes();\r\n            expect(notes.length).toBe(2);\r\n            expect(notes[0].from).toBe('reviewer');\r\n            expect(notes[0].text).toBe('a note from reviewer');\r\n            expect(notes[1].from).toBe('author');\r\n            expect(notes[1].text).toBe('a note from author');\r\n        });\r\n\r\n        it('should edit additional notes, issue #56', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_NOTES);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.supportsSetNotes()).toBeTruthy();\r\n            const notes: INote[] = tu.notes();\r\n            expect(notes.length).toBe(2);\r\n            const newNotes = [{from: 'testcase', text: 'changed note'}];\r\n            tu.setNotes(newNotes);\r\n            expect(tu.notes().length).toBe(1);\r\n            expect(tu.notes()[0].from).toBe('testcase');\r\n            expect(tu.notes()[0].text).toBe('changed note');\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_NOTES);\r\n            // meaning and description should not be touched\r\n            expect(tu2.description()).toBe('test notes feature');\r\n            expect(tu2.meaning()).toBe('meaning');\r\n            expect(tu2.notes().length).toBe(1);\r\n            expect(tu2.notes()[0].from).toBe('testcase');\r\n            expect(tu2.notes()[0].text).toBe('changed note');\r\n        });\r\n\r\n        it('should return empty source references array if source not set', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_NO_SOURCEREFS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(0);\r\n        });\r\n\r\n        it('should return source reference', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_ONE_SOURCEREF);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(1);\r\n            expect(tu.sourceReferences()[0].sourcefile).toBe('S:/experimente/sampleapp41/src/app/app.component.ts');\r\n            expect(tu.sourceReferences()[0].linenumber).toBe(10);\r\n        });\r\n\r\n        it('should return more than one source references', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(2);\r\n            expect(tu.sourceReferences()[0].sourcefile).toBe('S:/experimente/sampleapp41/src/app/app.component.ts');\r\n            expect(tu.sourceReferences()[0].linenumber).toBe(20);\r\n            expect(tu.sourceReferences()[1].sourcefile).toBe('S:/experimente/sampleapp41/src/app/app.component.ts');\r\n            expect(tu.sourceReferences()[1].linenumber).toBe(21);\r\n        });\r\n\r\n        it('should set source references', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(0);\r\n            tu.setSourceReferences([{sourcefile: 'x', linenumber: 10}, {sourcefile: 'y', linenumber: 20}]);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu2.sourceReferences().length).toBe(2);\r\n            expect(tu2.sourceReferences()[0].sourcefile).toBe('x');\r\n            expect(tu2.sourceReferences()[0].linenumber).toBe(10);\r\n            expect(tu2.sourceReferences()[1].sourcefile).toBe('y');\r\n            expect(tu2.sourceReferences()[1].linenumber).toBe(20);\r\n        });\r\n\r\n        it('should override source references', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.supportsSetSourceReferences()).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(2);\r\n            tu.setSourceReferences([{sourcefile: 'x:komisch', linenumber: 10}]);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu2.sourceReferences().length).toBe(1);\r\n            expect(tu2.sourceReferences()[0].sourcefile).toBe('x:komisch');\r\n            expect(tu2.sourceReferences()[0].linenumber).toBe(10);\r\n        });\r\n\r\n        it('should not change source reference when translating', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceReferences().length).toBe(2);\r\n            tu.translate('a translated value');\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_TWO_SOURCEREFS);\r\n            expect(tu2.targetContent()).toBe('a translated value');\r\n            expect(tu2.sourceReferences().length).toBe(2);\r\n            expect(tu2.sourceReferences()[0].sourcefile).toBe('S:/experimente/sampleapp41/src/app/app.component.ts');\r\n            expect(tu2.sourceReferences()[0].linenumber).toBe(20);\r\n            expect(tu2.sourceReferences()[1].sourcefile).toBe('S:/experimente/sampleapp41/src/app/app.component.ts');\r\n            expect(tu2.sourceReferences()[1].linenumber).toBe(21);\r\n        });\r\n\r\n        it ('should run through 3 different states while translating', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_APP_RUNS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.targetState()).toBe(STATE_NEW);\r\n            tu.translate('a translation');\r\n            expect(tu.targetState()).toBe(STATE_TRANSLATED);\r\n            tu.setTargetState(STATE_FINAL);\r\n            expect(tu.targetState()).toBe(STATE_FINAL);\r\n        });\r\n\r\n        it('should normalize placeholders to {{0}} etc', () => {\r\n            const file: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu.targetContentNormalized().asDisplayString()).toBe('Entry {{0}} of total {{1}} added.');\r\n        });\r\n\r\n        it('should normalize repeated placeholders to {{0}} {{1}} etc', () => {\r\n            const file: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_REPEATED_PLACEHOLDER);\r\n            expect(tu.targetContentNormalized().asDisplayString()).toBe('{{0}}: A message with 2 placeholders: {{0}} {{1}}');\r\n        });\r\n\r\n        it('should normalize embedded html tags', () => {\r\n            const file: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_TAGS);\r\n            expect(tu.targetContentNormalized().asDisplayString()).toBe('This message is <b><strong>VERY IMPORTANT</strong></b>');\r\n        });\r\n\r\n        it('should normalize unknown embedded html tags', () => {\r\n            const file: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_STRANGE_TAG);\r\n            expect(tu.targetContentNormalized().asDisplayString()).toBe('This message is <strange>{{0}}</strange>');\r\n        });\r\n\r\n        it('should normalize empty html tag br', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_BR_TAG);\r\n            expect(tu.sourceContentNormalized().asDisplayString()).toBe('Dieser Text enthält<br>einen Zeilenumbruch per HTML-br-Element.');\r\n            const translation = tu.sourceContentNormalized().translate('This text contains<br> a linebreak');\r\n            tu.translate(translation);\r\n            expect(tu.targetContent()).toBe('This text contains<ph id=\"0\" equiv=\"LINE_BREAK\" type=\"fmt\" disp=\"&lt;br/>\"/> a linebreak');\r\n        });\r\n\r\n        it('should normalize empty html tag img', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_IMG_TAG);\r\n            expect(tu.sourceContentNormalized().asDisplayString()).toBe('Dieser Text enthält ein Bild <img> mitt en in der Nachricht');\r\n            const translation = tu.sourceContentNormalized().translate('This text contains an img <img> in the message');\r\n            tu.translate(translation);\r\n            expect(tu.targetContent())\r\n                .toBe('This text contains an img <ph id=\"0\" equiv=\"TAG_IMG\" type=\"image\" disp=\"&lt;img/>\"/> in the message');\r\n        });\r\n\r\n        it('should remove a transunit by id', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu).toBeTruthy();\r\n            file.removeTransUnitWithId(ID_WITH_PLACEHOLDER);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu2).toBeFalsy(); // should not exist any more\r\n        });\r\n\r\n        it ('should translate source without or with target', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_APP_RUNS);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.targetContent()).toBeFalsy();\r\n            // first translate\r\n            tu.translate('Anwendung läuft');\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_APP_RUNS);\r\n            expect(tu2.targetContentNormalized().asDisplayString()).toBe('Anwendung läuft');\r\n            expect(tu2.targetState()).toBe(STATE_TRANSLATED);\r\n            // translate again\r\n            tu2.translate('Anwendung funktioniert');\r\n            const file3: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file2.editedContent(), null, null);\r\n            const tu3: ITransUnit = file3.transUnitWithId(ID_APP_RUNS);\r\n            expect(tu3.targetContentNormalized().asDisplayString()).toBe('Anwendung funktioniert');\r\n            expect(tu3.targetState()).toBe(STATE_TRANSLATED);\r\n        });\r\n\r\n        it ('should copy source to target for default lang', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.targetContent()).toBeFalsy();\r\n            const isDefaultLang = true;\r\n            const copyContent = false;\r\n            const file2: ITranslationMessagesFile = file.createTranslationFileForLang('xy', null, isDefaultLang, copyContent);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu2.targetContentNormalized().asDisplayString()).toBe('Eintrag {{0}} von {{1}} hinzugefügt.');\r\n        });\r\n\r\n        it ('should copy source to target for non default lang if wanted', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.targetContent()).toBeFalsy();\r\n            const isDefaultLang = false;\r\n            const copyContent = true;\r\n            const file2: ITranslationMessagesFile = file.createTranslationFileForLang('xy', null, isDefaultLang, copyContent);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu2.targetContentNormalized().asDisplayString()).toBe('Eintrag {{0}} von {{1}} hinzugefügt.');\r\n        });\r\n\r\n        it ('should copy source to target for non default lang and set state new, native state initial, #57', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const isDefaultLang = false;\r\n            const copyContent = true;\r\n            const file2: ITranslationMessagesFile = file.createTranslationFileForLang('xy', null, isDefaultLang, copyContent);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu2.targetContentNormalized().asDisplayString()).toBe('Eintrag {{0}} von {{1}} hinzugefügt.');\r\n            expect(tu2.targetState()).toBe(STATE_NEW);\r\n            expect((<any>tu2).nativeTargetState()).toBe('initial');\r\n        });\r\n\r\n        it ('should not copy source to target for non default lang if not wanted', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.targetContent()).toBeFalsy();\r\n            const isDefaultLang = false;\r\n            const copyContent = false;\r\n            const file2: ITranslationMessagesFile = file.createTranslationFileForLang('xy', null, isDefaultLang, copyContent);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu2.targetContent()).toBeFalsy();\r\n        });\r\n\r\n        it ('should copy a transunit from file a to file b', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            const targetFile: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeFalsy();\r\n            const newTu = targetFile.importNewTransUnit(tu, false, true);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeTruthy();\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toEqual(newTu);\r\n            const changedTargetFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(targetFile.editedContent(), null, null);\r\n            const targetTu = changedTargetFile.transUnitWithId(ID_TO_MERGE);\r\n            expect(targetTu.sourceContent()).toBe('Test for merging units');\r\n            expect(targetTu.targetContent()).toBe('Test for merging units');\r\n        });\r\n\r\n        it ('should copy a transunit from file a to file b and leave content blank (xliffmerge #103)', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            const targetFile: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeFalsy();\r\n            // flag copyContent set to false here...\r\n            const newTu = targetFile.importNewTransUnit(tu, false, false);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeTruthy();\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toEqual(newTu);\r\n            const changedTargetFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(targetFile.editedContent(), null, null);\r\n            const targetTu = changedTargetFile.transUnitWithId(ID_TO_MERGE);\r\n            expect(targetTu.sourceContent()).toBe('Test for merging units');\r\n            expect(targetTu.targetContent()).toBe('');\r\n        });\r\n\r\n        it ('should copy a transunit to a specified position (#53)', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            const targetFile: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeFalsy();\r\n            const ID_EXISTING = '7499557905529977371';\r\n            const existingTu = targetFile.transUnitWithId(ID_EXISTING);\r\n            expect(existingTu).toBeTruthy();\r\n            const newTu = targetFile.importNewTransUnit(tu, false, true, existingTu);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeTruthy();\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toEqual(newTu);\r\n            const doc: Document = new DOMParser().parseFromString(targetFile.editedContent());\r\n            const existingElem = DOMUtilities.getElementByTagNameAndId(doc, 'unit', ID_EXISTING);\r\n            const newElem = DOMUtilities.getElementByTagNameAndId(doc, 'unit', ID_TO_MERGE);\r\n            expect(DOMUtilities.getElementFollowingSibling(existingElem)).toEqual(newElem);\r\n            const changedTargetFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(targetFile.editedContent(), null, null);\r\n            const targetTu = changedTargetFile.transUnitWithId(ID_TO_MERGE);\r\n            expect(targetTu.sourceContent()).toBe('Test for merging units');\r\n        });\r\n\r\n        it ('should copy a transunit to first position (#53)', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            const targetFile: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeFalsy();\r\n            // when importNewTransUnit is called with null, new unit will be added at first position\r\n            const newTu = targetFile.importNewTransUnit(tu, false, true, null);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeTruthy();\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toEqual(newTu);\r\n            const doc: Document = new DOMParser().parseFromString(targetFile.editedContent());\r\n            const newElem = DOMUtilities.getElementByTagNameAndId(doc, 'unit', ID_TO_MERGE);\r\n            expect(newElem).toBeTruthy();\r\n            expect(DOMUtilities.getElementPrecedingSibling(newElem)).toBeFalsy();\r\n            const changedTargetFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(targetFile.editedContent(), null, null);\r\n            const targetTu = changedTargetFile.transUnitWithId(ID_TO_MERGE);\r\n            expect(targetTu.sourceContent()).toBe('Test for merging units');\r\n        });\r\n\r\n        it ('should copy source to target and set a praefix and suffix', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            file.setNewTransUnitTargetPraefix('%%');\r\n            file.setNewTransUnitTargetSuffix('!!');\r\n            const isDefaultLang = false;\r\n            const copyContent = true;\r\n            const file2: ITranslationMessagesFile = file.createTranslationFileForLang('xy', null, isDefaultLang, copyContent);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu2.targetState()).toBe(STATE_NEW);\r\n            expect(tu2.targetContent()).toBe('%%Test for merging units!!');\r\n        });\r\n\r\n        it ('should copy source to target, but should not set a praefix and suffix for ICU messages', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            file.setNewTransUnitTargetPraefix('%%');\r\n            file.setNewTransUnitTargetSuffix('!!');\r\n            const isDefaultLang = false;\r\n            const copyContent = true;\r\n            const file2: ITranslationMessagesFile = file.createTranslationFileForLang('xy', null, isDefaultLang, copyContent);\r\n            const tuICU: ITransUnit = file2.transUnitWithId(ID_ICU_PLURAL);\r\n            expect(tuICU.targetState()).toBe(STATE_NEW);\r\n            expect(tuICU.targetContent()).not.toContain('%%');\r\n            expect(tuICU.targetContent()).not.toContain('!!');\r\n        });\r\n\r\n        it ('should copy a transunit from file a to file b and set a praefix and suffix', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            const targetFile: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            targetFile.setNewTransUnitTargetPraefix('%%');\r\n            targetFile.setNewTransUnitTargetSuffix('!!');\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeFalsy();\r\n            const newTu = targetFile.importNewTransUnit(tu, false, true);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeTruthy();\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toEqual(newTu);\r\n            const changedTargetFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(targetFile.editedContent(), null, null);\r\n            const targetTu = changedTargetFile.transUnitWithId(ID_TO_MERGE);\r\n            expect(targetTu.targetContent()).toBe('%%Test for merging units!!');\r\n        });\r\n\r\n        it ('should copy a transunit from file a to file b, but should not set a praefix and suffix for ICU messages', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_ICU_SELECT);\r\n            expect(tu).toBeTruthy();\r\n            const targetFile: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            targetFile.setNewTransUnitTargetPraefix('%%');\r\n            targetFile.setNewTransUnitTargetSuffix('!!');\r\n            expect(targetFile.transUnitWithId(ID_ICU_SELECT)).toBeFalsy();\r\n            const newTu = targetFile.importNewTransUnit(tu, false, true);\r\n            expect(targetFile.transUnitWithId(ID_ICU_SELECT)).toBeTruthy();\r\n            expect(targetFile.transUnitWithId(ID_ICU_SELECT)).toEqual(newTu);\r\n            const changedTargetFile = TranslationMessagesFileFactory.fromUnknownFormatFileContent(targetFile.editedContent(), null, null);\r\n            const targetTu = changedTargetFile.transUnitWithId(ID_ICU_SELECT);\r\n            expect(targetTu.targetContent()).not.toContain('%%');\r\n            expect(targetTu.targetContent()).not.toContain('!!');\r\n        });\r\n\r\n        it ('should preserve line end at end of file while editing', () => {\r\n            const content = fs.readFileSync(MASTER1SRC, ENCODING);\r\n            expect(content.endsWith('\\n')).toBeTruthy('Master should end with EOL');\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_TO_MERGE);\r\n            expect(tu).toBeTruthy();\r\n            const targetFile: ITranslationMessagesFile = readFile(TRANSLATED_FILE_SRC);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeFalsy();\r\n            targetFile.importNewTransUnit(tu, false, true);\r\n            expect(targetFile.transUnitWithId(ID_TO_MERGE)).toBeTruthy();\r\n            expect(targetFile.editedContent().endsWith('\\n')).toBeTruthy('Edited content should end with EOL');\r\n        });\r\n\r\n        it ('should translate using NormalizedMessage (plain text case, no placeholders, no markup)', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_APP_RUNS);\r\n            expect(tu).toBeTruthy();\r\n            const translationString = 'Anwendung läuft';\r\n            // first translate\r\n            const translation: INormalizedMessage = tu.sourceContentNormalized().translate(translationString);\r\n            tu.translate(translation);\r\n            expect(tu.targetContent()).toBe(translationString);\r\n            const file2: ITranslationMessagesFile =\r\n                TranslationMessagesFileFactory.fromUnknownFormatFileContent(file.editedContent(), null, null);\r\n            const tu2: ITransUnit = file2.transUnitWithId(ID_APP_RUNS);\r\n            expect(tu2.targetContentNormalized().asDisplayString()).toBe(translationString);\r\n        });\r\n\r\n        it('should translate placeholders without loosing disp info', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_WITH_PLACEHOLDER);\r\n            expect(tu).toBeTruthy();\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('Eintrag {{0}} von {{1}} hinzugefügt.');\r\n            const translatedMessage = normalizedMessage.translate('Total {{1}}, added {{0}}');\r\n            tu.translate(translatedMessage);\r\n            expect(tu.targetContent())\r\n                .toBe('Total <ph id=\"0\" equiv=\"INTERPOLATION_1\" disp=\"{{total()}}\"/>,' +\r\n                    ' added <ph id=\"1\" equiv=\"INTERPOLATION\" disp=\"{{number()}}\"/>');\r\n        });\r\n\r\n        it('should contain ICU reference in sourceContentNormalized', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_CONTAINS_ICU);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceContent()).toBe('Zum Wert <ph id=\"0\" equiv=\"INTERPOLATION\" disp=\"{{auswahl}}\"/> gehört der Text <ph id=\"1\"/>');\r\n            expect(tu.sourceContentNormalized().asDisplayString()).toBe('Zum Wert {{0}} gehört der Text <ICU-Message-Ref_1/>');\r\n        });\r\n\r\n        it('should contain 2 ICU references in sourceContentNormalized (old syntax before angular #17344)', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_CONTAINS_TWO_ICU);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceContent()).toBe('first: <ph id=\"0\"/>, second <ph id=\"1\"/>');\r\n            expect(tu.sourceContentNormalized().asDisplayString()).toBe('first: <ICU-Message-Ref_0/>, second <ICU-Message-Ref_1/>');\r\n        });\r\n\r\n        it('should contain 2 ICU references in sourceContentNormalized (new syntax after angular #17344)', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_CONTAINS_TWO_ICU_WITH_EQUIV);\r\n            expect(tu).toBeTruthy();\r\n            expect(tu.sourceContent())\r\n                .toBe('first: <ph id=\"0\" equiv=\"ICU\" disp=\"{count, plural, =0 {...} =1 {...} other {...}}\"/>,' +\r\n                    ' second <ph id=\"1\" equiv=\"ICU_1\" disp=\"{gender, select, m {...} f {...}}\"/>');\r\n            expect(tu.sourceContentNormalized().asDisplayString()).toBe('first: <ICU-Message-Ref_0/>, second <ICU-Message-Ref_1/>');\r\n        });\r\n\r\n        it('should translate ICU references without loosing disp info', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_CONTAINS_TWO_ICU_WITH_EQUIV);\r\n            expect(tu).toBeTruthy();\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('first: <ICU-Message-Ref_0/>, second <ICU-Message-Ref_1/>');\r\n            const translatedMessage = normalizedMessage.translate('Zweitens <ICU-Message-Ref_1/>, Erstens: <ICU-Message-Ref_0/>');\r\n            tu.translate(translatedMessage);\r\n            expect(tu.targetContent())\r\n                .toBe('Zweitens <ph id=\"1\" equiv=\"ICU_1\" disp=\"{gender, select, m {...} f {...}}\"/>,' +\r\n                    ' Erstens: <ph id=\"0\" equiv=\"ICU\" disp=\"{count, plural, =0 {...} =1 {...} other {...}}\"/>');\r\n        });\r\n\r\n        it('should handle plural ICU', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_ICU_PLURAL);\r\n            expect(tu).toBeTruthy();\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('<ICU-Message/>');\r\n            const icuMessage = normalizedMessage.getICUMessage();\r\n            expect(icuMessage).toBeTruthy();\r\n            expect(icuMessage.isPluralMessage()).toBeTruthy();\r\n            expect(icuMessage.isSelectMessage()).toBeFalsy();\r\n            expect(icuMessage.getCategories().length).toBe(3);\r\n            expect(icuMessage.getCategories()[0].getCategory()).toBe('=0');\r\n            expect(icuMessage.getCategories()[0].getMessageNormalized().asDisplayString()).toBe('kein Schaf');\r\n            expect(icuMessage.getCategories()[1].getCategory()).toBe('=1');\r\n            expect(icuMessage.getCategories()[1].getMessageNormalized().asDisplayString()).toBe('1 Schaf');\r\n            expect(icuMessage.getCategories()[2].getCategory()).toBe('other');\r\n            expect(icuMessage.getCategories()[2].getMessageNormalized().asDisplayString()).toBe('x Schafe');\r\n        });\r\n\r\n        it('should translate plural ICU', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_ICU_PLURAL);\r\n            expect(tu).toBeTruthy();\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('<ICU-Message/>');\r\n            const translatedMessage = normalizedMessage.translateICUMessage({'=0': 'nothing'});\r\n            tu.translate(translatedMessage);\r\n            const icuMessage = tu.targetContentNormalized().getICUMessage();\r\n            expect(icuMessage).toBeTruthy();\r\n            expect(icuMessage.isPluralMessage()).toBeTruthy();\r\n            expect(icuMessage.isSelectMessage()).toBeFalsy();\r\n            expect(icuMessage.getCategories().length).toBe(3);\r\n            expect(icuMessage.getCategories()[0].getCategory()).toBe('=0');\r\n            expect(icuMessage.getCategories()[0].getMessageNormalized().asDisplayString()).toBe('nothing');\r\n            expect(tu.targetContent()).toBe('{VAR_PLURAL, plural, =0 {nothing} =1 {1 Schaf} other {x Schafe}}');\r\n        });\r\n\r\n        it('should handle select ICU message', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_ICU_SELECT);\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('<ICU-Message/>');\r\n            const icuMessage = normalizedMessage.getICUMessage();\r\n            expect(icuMessage).toBeTruthy();\r\n            expect(icuMessage.isPluralMessage()).toBeFalsy();\r\n            expect(icuMessage.isSelectMessage()).toBeTruthy();\r\n            expect(icuMessage.getCategories().length).toBe(3);\r\n            expect(icuMessage.getCategories()[0].getCategory()).toBe('wert0');\r\n            expect(icuMessage.getCategories()[0].getMessageNormalized().asDisplayString()).toBe('wert0 wurde gewählt');\r\n            expect(icuMessage.getCategories()[1].getCategory()).toBe('wert1');\r\n            expect(icuMessage.getCategories()[1].getMessageNormalized().asDisplayString()).toBe('ein anderer Wert (wert1) wurde gewählt');\r\n            expect(icuMessage.getCategories()[2].getCategory()).toBe('wert2');\r\n            expect(icuMessage.getCategories()[2].getMessageNormalized().asDisplayString()).toBe('was ganz anderes wurde gewählt');\r\n        });\r\n\r\n        it('should handle ICU with embedded tags', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_ICU_EMBEDDED_TAGS);\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('<ICU-Message/>');\r\n            const icuMessage = normalizedMessage.getICUMessage();\r\n            expect(icuMessage).toBeTruthy();\r\n            expect(icuMessage.isPluralMessage()).toBeFalsy();\r\n            expect(icuMessage.isSelectMessage()).toBeTruthy();\r\n            expect(icuMessage.getCategories().length).toBe(3);\r\n            expect(icuMessage.getCategories()[0].getCategory()).toBe('wert0');\r\n            expect(icuMessage.getCategories()[0].getMessageNormalized().asDisplayString()).toBe('wert0 ausgewählt');\r\n            expect(icuMessage.getCategories()[1].getCategory()).toBe('wert1');\r\n            expect(icuMessage.getCategories()[1].getMessageNormalized().asDisplayString())\r\n                .toBe('ein <b>anderer</b> Wert (wert1) ausgewählt');\r\n            expect(icuMessage.getCategories()[2].getCategory()).toBe('wert2');\r\n            expect(icuMessage.getCategories()[2].getMessageNormalized().asDisplayString())\r\n                .toBe('was <em>ganz anderes</em> wurde ausgewählt');\r\n        });\r\n\r\n        it('should translate ICU with embedded tags', () => {\r\n            const file: ITranslationMessagesFile = readFile(MASTER1SRC);\r\n            const tu: ITransUnit = file.transUnitWithId(ID_ICU_EMBEDDED_TAGS);\r\n            const normalizedMessage = tu.sourceContentNormalized();\r\n            expect(normalizedMessage.asDisplayString()).toBe('<ICU-Message/>');\r\n            const translatedMessage = normalizedMessage.translateICUMessage({'wert1': '<em>changed</em>'});\r\n            tu.translate(translatedMessage);\r\n            const icuMessage = tu.targetContentNormalized().getICUMessage();\r\n            expect(icuMessage).toBeTruthy();\r\n            expect(icuMessage.isPluralMessage()).toBeFalsy();\r\n            expect(icuMessage.isSelectMessage()).toBeTruthy();\r\n            expect(icuMessage.getCategories().length).toBe(3);\r\n            expect(icuMessage.getCategories()[1].getCategory()).toBe('wert1');\r\n            expect(icuMessage.getCategories()[1].getMessageNormalized().asDisplayString()).toBe('<em>changed</em>');\r\n            expect(tu.targetContent())\r\n                .toContain('wert1 {<pc id=\"0\" equivStart=\"START_EMPHASISED_TEXT\" equivEnd=\"CLOSE_EMPHASISED_TEXT\" type=\"other\"' +\r\n                    ' dispStart=\"&lt;em>\" dispEnd=\"&lt;/em>\">changed</pc>}');\r\n            // TODO find warnings in embedded message, known limitation in the moment.\r\n            //            const warnings = icuMessage.getCategories()[1].getMessageNormalized().validateWarnings();\r\n            //            expect(warnings).toBeTruthy();\r\n        });\r\n\r\n    });\r\n});\r\n"]}