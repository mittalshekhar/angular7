/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/**
 * Created by martin on 05.05.2017.
 * A part of a parsed message.
 * Can be a text, a placeholder, a tag
 */
/** @enum {number} */
const ParsedMessagePartType = {
    TEXT: 0,
    PLACEHOLDER: 1,
    START_TAG: 2,
    END_TAG: 3,
    EMPTY_TAG: 4,
    ICU_MESSAGE: 5,
    ICU_MESSAGE_REF: 6,
};
export { ParsedMessagePartType };
ParsedMessagePartType[ParsedMessagePartType.TEXT] = 'TEXT';
ParsedMessagePartType[ParsedMessagePartType.PLACEHOLDER] = 'PLACEHOLDER';
ParsedMessagePartType[ParsedMessagePartType.START_TAG] = 'START_TAG';
ParsedMessagePartType[ParsedMessagePartType.END_TAG] = 'END_TAG';
ParsedMessagePartType[ParsedMessagePartType.EMPTY_TAG] = 'EMPTY_TAG';
ParsedMessagePartType[ParsedMessagePartType.ICU_MESSAGE] = 'ICU_MESSAGE';
ParsedMessagePartType[ParsedMessagePartType.ICU_MESSAGE_REF] = 'ICU_MESSAGE_REF';
/**
 * @abstract
 */
export class ParsedMessagePart {
    /**
     * @param {?} type
     */
    constructor(type) {
        this.type = type;
    }
}
if (false) {
    /** @type {?} */
    ParsedMessagePart.prototype.type;
    /**
     * String representation of the part.
     * @abstract
     * @param {?=} format optional way to determine the exact syntax.
     * Allowed formats are defined as constants NORMALIZATION_FORMAT...
     * @return {?}
     */
    ParsedMessagePart.prototype.asDisplayString = function (format) { };
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VkLW1lc3NhZ2UtcGFydC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtaTE4bnN1cHBvcnQvbmd4LWkxOG5zdXBwb3J0LWxpYi8iLCJzb3VyY2VzIjpbImltcGwvcGFyc2VkLW1lc3NhZ2UtcGFydC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQU9JLE9BQUk7SUFDSixjQUFXO0lBQ1gsWUFBUztJQUNULFVBQU87SUFDUCxZQUFTO0lBQ1QsY0FBVztJQUNYLGtCQUFlOzs7NENBTmYsSUFBSTs0Q0FDSixXQUFXOzRDQUNYLFNBQVM7NENBQ1QsT0FBTzs0Q0FDUCxTQUFTOzRDQUNULFdBQVc7NENBQ1gsZUFBZTs7OztBQUduQixNQUFNOzs7O0lBRUYsWUFBbUIsSUFBMkI7UUFBM0IsU0FBSSxHQUFKLElBQUksQ0FBdUI7S0FFN0M7Q0FTSiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG1hcnRpbiBvbiAwNS4wNS4yMDE3LlxyXG4gKiBBIHBhcnQgb2YgYSBwYXJzZWQgbWVzc2FnZS5cclxuICogQ2FuIGJlIGEgdGV4dCwgYSBwbGFjZWhvbGRlciwgYSB0YWdcclxuICovXHJcblxyXG5leHBvcnQgZW51bSBQYXJzZWRNZXNzYWdlUGFydFR5cGUge1xyXG4gICAgVEVYVCxcclxuICAgIFBMQUNFSE9MREVSLFxyXG4gICAgU1RBUlRfVEFHLFxyXG4gICAgRU5EX1RBRyxcclxuICAgIEVNUFRZX1RBRyxcclxuICAgIElDVV9NRVNTQUdFLFxyXG4gICAgSUNVX01FU1NBR0VfUkVGXHJcbn1cclxuXHJcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBQYXJzZWRNZXNzYWdlUGFydCB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHVibGljIHR5cGU6IFBhcnNlZE1lc3NhZ2VQYXJ0VHlwZSkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgcGFydC5cclxuICAgICAqIEBwYXJhbSBmb3JtYXQgb3B0aW9uYWwgd2F5IHRvIGRldGVybWluZSB0aGUgZXhhY3Qgc3ludGF4LlxyXG4gICAgICogQWxsb3dlZCBmb3JtYXRzIGFyZSBkZWZpbmVkIGFzIGNvbnN0YW50cyBOT1JNQUxJWkFUSU9OX0ZPUk1BVC4uLlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgYWJzdHJhY3QgYXNEaXNwbGF5U3RyaW5nKGZvcm1hdD86IHN0cmluZyk6IHN0cmluZztcclxuXHJcbn1cclxuIl19